version: "3.8"

services:
  db:
    image: ${REGISTRY}/harrybrwn/postgres:latest
    build:
      context: config/docker/postgres
      dockerfile: Dockerfile
      args:
        # - BASE_IMAGE_VERSION=14.2-alpine3.15
        - BASE_IMAGE_VERSION=13.6-alpine
    environment:
      # <username>:<password>
      POSTGRES_USERS: "
        grafana:testbed02
        db-backups:testbed03"
      # <database>:<owner>
      POSTGRES_DATABASES: "
        harrybrwn_api:harrybrwn
        harrybrwn_hooks:harrybrwn
        grafana:grafana"
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - config/env/db.env

  redis:
    image: ${REGISTRY}/harrybrwn/redis:latest
    build:
      context: .
      dockerfile: config/redis/Dockerfile
      args:
        - REDIS_VERSION=6.2.6-alpine
    networks:
      - backend
    ports:
      - "${REDIS_PORT:-6379}:6379"
    env_file:
      - config/env/redis.env
    volumes:
      - cache-data:/data

  nginx:
    image: ${REGISTRY}/harrybrwn/nginx:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
      args:
        - REGISTRY_UI_ROOT=/var/www/registry.hryb.dev
    volumes:
      # harrybrwn.com
      - ./config/pki/certs/harrybrwn.com/server.crt:/etc/harrybrwn.com/server.crt:ro
      - ./config/pki/certs/harrybrwn.com/server.key:/etc/harrybrwn.com/server.key:ro
      # hryb.dev
      - ./config/pki/certs/hryb.local/server.crt:/etc/hryb.dev/server.crt:ro
      - ./config/pki/certs/hryb.local/server.key:/etc/hryb.dev/server.key:ro
      # hrry.me
      - ./config/pki/certs/hrry.local/server.crt:/etc/hrry.me/server.crt:ro
      - ./config/pki/certs/hrry.local/server.key:/etc/hrry.me/server.key:ro
      # hrry.dev
      - ./config/pki/certs/hrry.local/server.crt:/etc/hrry.dev/server.crt:ro
      - ./config/pki/certs/hrry.local/server.key:/etc/hrry.dev/server.key:ro
    networks:
      backend:
        aliases:
          # Custom container hostname for other containers, mainly for testing.
          - harrybrwn.local
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    environment:
      - REGISTRY_TITLE=Harry's Docker Registry
      - REGISTRY_URL=https://registry.hrry.local
      - CATALOG_ELEMENTS_LIMIT=15

  api:
    image: ${REGISTRY}/harrybrwn/api:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: api
      labels:
        com.harrybrwn.api.description: "api for harrybrwn.com"
        com.harrybrwn.api.commit: ${GIT_COMMIT:-dev}
        com.harrybrwn.api.branch: ${GIT_BRANCH:-dev}
        com.harrybrwn.api.source_hash: ${SOURCE_HASH:-0000}
    command: --port 8081
    env_file:
      - config/env/api.env
      - config/env/db.env
      - config/env/redis.env
    environment:
      - ENV=dev
      - LOG_OUTPUT=stdout
      - LOG_FORMAT=json
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=harrybrwn_api
    networks:
      - backend

  hooks:
    image: ${REGISTRY}/harrybrwn/hooks:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: hooks
    networks:
      - backend
    ports:
      - 8889:8889
    env_file:
      - config/env/db.env
      - config/env/github.env
      - config/env/hooks.env
    environment:
      - POSTGRES_DB=harrybrwn_hooks
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432

  backups:
    image: ${REGISTRY}/harrybrwn/backups:latest
    build:
      target: backups
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - S3_ENDPOINT=s3:9000
      - BACKUPS_BUCKET=db-backups
    env_file:
      - config/env/db-backup.env
      - config/env/db.env
    networks:
      - backend
    ports:
      - 8082:8082

  geoip:
    image: ${REGISTRY}/harrybrwn/geoip:latest
    build:
      target: geoip
      context: .
    networks:
      - backend

  vanity-imports:
    image: ${REGISTRY}/harrybrwn/vanity-imports:latest
    build:
      target: vanity-imports
      context: .
    networks:
      - backend

  registry:
    image: ${REGISTRY}/harrybrwn/registry:latest
    build:
      context: .
      dockerfile: config/registry/Dockerfile
      args:
        - REGISTRY_VERSION=2
    environment:
      - REGISTRY_LOG_LEVEL=debug
      - REGISTRY_AUTH=htpasswd
      - REGISTRY_AUTH_HTPASSWD_PATH=/run/secrets/registry-htpasswd-file
      - REGISTRY_AUTH_HTPASSWD_REALM=registry.hryb.dev
    env_file:
      - config/env/redis.env
      - config/env/registry.env
      - config/env/minio.env
    secrets:
      - registry-htpasswd-file
    networks:
      - backend

  # TODO look at distributed config <https://docs.min.io/docs/deploy-minio-on-docker-compose.html>
  s3:
    image: ${REGISTRY}/harrybrwn/s3:latest
    build:
      context: ./config
      dockerfile: docker/minio/Dockerfile
      args:
        - MINIO_VERSION=RELEASE.2022-05-23T18-45-11Z.fips
        - MC_VERSION=RELEASE.2022-05-09T04-08-26Z.fips
    command: ["server", "/data", "--console-address", ":9001"]
    ports:
      - 9000:9000 # api
      - 9001:9001 # web ui
    volumes:
      - s3:/data
    env_file:
      - config/env/minio.env
    environment:
      - HB_MC_ALIAS_NAME=hryb
      - HB_MC_ALIAS_URL=http://s3:9000
      - MINIO_SERVER_URL=http://s3:9000
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_PROMETHEUS_URL=http://prometheus:9090
      - MINIO_PROMETHEUS_JOB_ID=minio-cluster
      - MINIO_BROWSER_REDIRECT_URL=http://s3-console.hrry.local
    networks:
      - backend

volumes:
  database:
  cache-data:
  s3:

networks:
  backend:

secrets:
  registry-htpasswd-file:
    file: ./config/registry/htpasswd
  nginx-prometheus-passwd:
    file: ./config/nginx/metrics.passwd