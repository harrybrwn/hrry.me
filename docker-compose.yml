version: "3.8"

services:
  db:
    image: postgres:13.6-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-testdb1}
      POSTGRES_USER: ${POSTGRES_USER:-web}
      POSTGRES_DB: ${POSTGRES_DB:-harrybrwn}
    networks:
      - backend
    ports:
      - "9432:5432"
    volumes:
      - database:/var/lib/postgresql/data/
    env_file:
      - .env

  redis:
    image: redis:6.2.6-alpine
    networks:
      - backend
    ports:
      - ${REDIS_PORT:-6379}:${REDIS_PORT:-6379}
    command:
      - redis-server
      - --port
      - ${REDIS_PORT:-6379}
      - --requirepass
      - ${REDIS_PASSWORD:-testcache1}
    env_file:
      - .env
    volumes:
      - cache-data:/data

  nginx:
    # image: registry.digitalocean.com/webreef/harrybrwn/nginx:latest
    image: harrybrwn/nginx:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
      args:
        SITE: harrybrwn.com
    volumes:
      - ./config/pki/certs/harrybrwn.com/server.crt:/etc/harrybrwn.com/server.crt:ro
      - ./config/pki/certs/harrybrwn.com/server.key:/etc/harrybrwn.com/server.key:ro
    networks:
      backend:
        aliases:
          - nginx
          # Custom container hostname for other containers, mainly for testing.
          - harrybrwn.local
    ports:
      - "80:80"
      - "443:443"

  api:
    # image: registry.digitalocean.com/webreef/harrybrwn/api:latest
    image: harrybrwn/api:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: api
      labels:
        com.harrybrwn.api.description: "API for harrybrwn.com"
        com.harrybrwn.api.commit: ${GIT_COMMIT:-dev}
        com.harrybrwn.api.source_hash: ${SOURCE_HASH:-0000}
    command: -port 8081
    env_file:
      - .env
    environment:
      # Misc
      - ENV=dev
      - LOG_OUTPUT=stdout
      - JWT_SEED
      - SENDGRID_API_KEY
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD
      # Database
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    networks:
      - backend

  hooks:
    image: harybrwn/hooks:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: hooks
    networks:
      - backend
    ports:
      - 8889:8889
    env_file:
      - config/env/hooks.env

volumes:
  database:
  cache-data:

networks:
  backend:
