name: Nginx Docker Image
description: Build a custom nginx docker image

inputs:
  version:
    description: Nginx version tag.
    required: true
  image:
    description: Docker image name.
    required: true
    default: harrybrwn/nginx
  modules:
    description: List of modules to include in the build.
    required: false
    default: geoip geoip2 headers-more opentracing otel ndk encrypted-session
  platforms:
    description: Docker image build target platforms
    required: true
    default: linux/amd64,linux/arm64,linux/arm/v7

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Setup docker buildx
      uses: docker/setup-buildx-action@v3
      with:
        # `docker build` becomes an alias for `docker buildx build`
        install: true
        platforms: linux/amd64,linux/arm64,linux/arm/v7
    - name: Show Info
      run: docker buildx ls
      shell: bash
    - name: Checkout Docker-Nginx
      uses: actions/checkout@v4
      with:
        repository: nginxinc/docker-nginx
        ref: ${{ inputs.version }}
        path: ./build/docker-nginx
    - name: Build Basic Image
      run: |
        docker buildx build \
          --file mainline/alpine-slim/Dockerfile \
          --platforms linux/amd64,linux/arm64,linux/arm/v7 \
          --tag "${{ inputs.image }}:latest-basic" \
          --tag "${{ inputs.image }}:${{ inputs.version }}-basic" \
          --push \
          ./mainline/alpine-slim
      shell: bash
      working-directory: ./build/docker-nginx
    - name: Build Modules Image
      run: |
        docker buildx build \
          --build-arg "ENABLED_MODULES=${{ inputs.modules }}" \
          --build-arg "NGINX_FROM_IMAGE=nginx:${{ inputs.version }}-alpine" \
          --file modules/Dockerfile.alpine \
          --platforms linux/amd64,linux/arm64,linux/arm/v7 \
          --tag "${{ inputs.image }}:latest" \
          --tag "${{ inputs.image }}:${{ inputs.version }}" \
          --tag "${{ inputs.image }}:${{ inputs.version }}-alpine" \
          --tag "${{ inputs.image }}:${{ github.sha }}" \
          --push \
        ./modules
      shell: bash
      working-directory: ./build/docker-nginx
