# Docs: https://doc.traefik.io/traefik/routing/providers/kubernetes-crd
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: nginx-route-tcp
spec:
  entryPoints: [websecure]
  routes:
  - match: >-
      HostSNI(`hrry.me`)
      || HostSNI(`api.hrry.dev`)
      || HostSNI(`1k.hrry.me`)
      || HostSNI(`s3.hrry.dev`)
      || HostSNI(`harrybrwn.com`)
      || HostSNI(`hextris.harrybrwn.com`)
      || HostSNI(`registry.hrry.dev`)
      || HostSNI(`hrry.dev`)
    services:
     - name: nginx
       port: https
  - match: >-
      HostSNI(`grafana.hrry.dev`)
      || HostSNI(`grafana.lab.hrry.dev`)
    services:
    - name: grafana
      port: http
  - match: HostSNI(`cr.hrry.io`)
    services:
    - name: registry
      port: http
  tls:
    passthrough: true

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: web-routes-tcp
spec:
  entryPoints: [web]
  routes:
  - match: HostSNI(`*`)
    services:
    - name: nginx
      port: http # will redirect most things to https

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: hrry-dev-routes
spec:
  entryPoints: [websecure]
  routes:
  - match: Host(`ip.hrry.dev`) && !Path(`/metrics`)
    kind: Rule
    services:
    - { name: geoip, kind: Service, port: http, scheme: http }
  - match: Host(`files.hrry.dev`)
    kind: Rule
    services:
    - { name: filestash, kind: Service, port: http, scheme: http }
  - match: Host(`gopkg.hrry.dev`) && !Path(`/metrics`)
    kind: Rule
    services:
    - { name: vanity-imports, kind: Service, port: http, scheme: http }
  - match: Host(`auth.hrry.dev`)
    kind: Rule
    middlewares:
      - name: handle-not-found
      - name: set-forwarded-proto-https
    services:
    - { name: hydra, kind: Service, port: hydra-public, scheme: http }
  - match: Host(`s3-console.hrry.dev`)
    kind: Rule
    services:
    - { name: minio-console, kind: Service, port: http, scheme: http }
  tls:
    # Use an existing secret
    secretName: hrry-dev-tls

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: hrry-me-routes
spec:
  entryPoints: [websecure]
  routes:
  - match: Host(`wiki.hrry.me`)
    kind: Rule
    services:
      - { name: outline, kind: Service, port: http, scheme: http }
  tls:
    # Use an existing secret
    secretName: hrry-me-tls

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: harrybrwn-com-routes
spec:
  routes:
  - match: Host(`hooks.harrybrwn.com`)
    kind: Rule
    services:
      - { name: hooks, kind: Service, port: http, scheme: http }
  tls:
    secretName: harrybrwn-com-tls

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: handle-not-found
spec:
  errors:
    status:
      - 404-405
    query: /{status}.html
    service:
      name: nginx
      port: http

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: set-forwarded-proto-https
spec:
  headers:
    customRequestHeaders:
      X-Fowarded-Proto: "https"
