apiVersion: apps/v1
kind: Deployment
metadata:
  name: hydra
  annotations:
    hrry.me/has-init: 'true'
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/name: hydra
    app.kubernetes.io/part-of: hydra
    app.kubernetes.io/component: auth
spec:
  selector:
    matchLabels:
      app: hydra
  template:
    metadata:
      labels:
        app: hydra
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '4445'
        prometheus.io/path: '/metrics/prometheus'
    spec:
      initContainers:
      - name: migrate
        image: oryd/hydra:v1.11.8
        #image: oryd/hydra:v2.2.0
        imagePullPolicy: Always
        args: ["migrate", "sql", "-e", "-y"]
        envFrom:
          - secretRef: { name: hydra-env }
      containers:
      - name: hydra
        image: oryd/hydra:v1.11.8
        #image: oryd/hydra:v2.2.0
        imagePullPolicy: Always
        args: ["serve", "all", "--config=/etc/hydra/hydra.yml"]
        envFrom:
          - secretRef: { name: hydra-env }
          - configMapRef: { name: hydra-env }
        resources:
          limits:
            memory: "128Mi"
            cpu: "100m"
          requests:
            memory: "64Mi"
            cpu: "75m"
        ports:
        - name: public
          containerPort: 4444
        - name: admin
          containerPort: 4445
        volumeMounts:
        - name: config
          mountPath: /etc/hydra/
          readOnly: true
        - name: tls
          mountPath: /etc/hydra/tls/
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: hydra
          optional: false
      - name: tls
        secret:
          secretName: hrry-dev-tls
