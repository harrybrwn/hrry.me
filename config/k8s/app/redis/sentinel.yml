apiVersion: v1
kind: Service
metadata:
  name: sentinel
spec:
  #type: ClusterIP
  clusterIP: None
  selector:
    app: sentinel
  ports:
    - port: 26379
      targetPort: sentinel
      protocol: TCP
      name: sentinel-26379

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
spec:
  serviceName: sentinel
  replicas: 3
  selector:
    matchLabels:
      app: sentinel
  template:
    metadata:
      labels:
        app: sentinel
    spec:
      initContainers:
        - name: sentinel-init
          image: redis:6.2.6-alpine
          command: [ "sh", "-c" ]
          args:
            - |
              nodes=redis-0.redis,redis-1.redis,redis-2.redis
              for i in $(seq 30); do
                for n in ${nodes//,/ }
                do
                  echo "finding master at $n"
                  MASTER=$(redis-cli --no-auth-warning --raw -h $n -a $REDIS_PASSWORD info replication | awk '{print $1}' | grep master_host: | cut -d ":" -f2)
                  if [ "$MASTER" == "" ]; then
                    echo "no master found"
                    MASTER=
                  else
                    echo "found $MASTER"
                    break
                  fi
                done
                if [ -n "$MASTER" ]; then
                  break
                fi
                sleep 2
              done
              echo "sentinel monitor rdbmaster $MASTER 6379 2" >> /tmp/master
              echo "port 26379
              sentinel resolve-hostnames yes
              sentinel announce-hostnames yes
              $(cat /tmp/master)
              sentinel down-after-milliseconds rdbmaster 6000
              sentinel failover-timeout rdbmaster 60000
              sentinel parallel-syncs rdbmaster 1
              sentinel auth-pass rdbmaster $REDIS_PASSWORD
              " > /etc/redis/sentinel.conf
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: password
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
      containers:
        - name: sentinel
          image: redis:6.2.6-alpine
          command: ["redis-sentinel"]
          args: ["/etc/redis/sentinel.conf"]
          ports:
            - containerPort: 26379
              name: sentinel
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
            - name: data
              mountPath: /data
      volumes:
        - name: redis-config
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        #storageClassName: local-storage
        storageClassName: standard
        resources:
          requests:
            storage: 50Mi
