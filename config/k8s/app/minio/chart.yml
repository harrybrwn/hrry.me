---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: minio
  namespace: kube-system
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: object-storage
spec:
  chart: minio
  version: 5.2.1
  # repo: https://charts.min.io
  repo: https://helm.hrry.dev
  targetNamespace: minio
  set:
    replicas: 3
    environment.MINIO_PROMETHEUS_AUTH_TYPE: public
    environment.MINIO_PROMETHEUS_URL: http://prometheus.prometheus.svc.cluster.local:9090
    environment.MINIO_PROMETHEUS_JOB_ID: minio-cluster
    environment.MINIO_LOGGER_WEBHOOK_ENABLE_PRIMARY: 'on'
    environment.MINIO_LOGGER_WEBHOOK_ENDPOINT_PRIMARY: http://hooks:8889/hooks/minio/logs
    environment.MINIO_AUDIT_WEBHOOK_ENABLE_PRIMARY: 'on'
    environment.MINIO_AUDIT_WEBHOOK_ENDPOINT_PRIMARY: http://hooks:8889/hooks/minio/audit
    extraSecret: minio-env # used for env vars

  valuesContent: |-
    # distributed|standalone
    mode: distributed
    persistence:
      accessMode: ReadWriteMany
      storageClass: nfs-storage
      size: 3Gi
    # secret with 'rootUser' and 'rootPassword'
    existingSecret: minio-root-user

    policies:
      - name: loki
        statements:
          - effect: Allow
            resources:
              - "arn:aws:s3:::loki-logs/*"
              - "arn:aws:s3:::loki-logs"
            actions:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:DeleteObject"
              - "s3:ListBucket"
      - name: geoip-readonly
        statements:
          - effect: Allow
            actions: ["s3:GetBucketLocation"]
            resources: ["arn:aws:s3:::geoip"]
          - effect: Allow
            actions: ["s3:GetBucketLocation"]
            resources: ["arn:aws:s3:::files"]
          - effect: Allow
            actions: ["s3:GetObject", "s3:ListBucket"]
            resources: ["arn:aws:s3:::geoip/*"]
      - name: geoip-readwrite
        statements:
          - effect: Allow
            actions: ["s3:*"]
            resources: ["arn:aws:s3:::geoip"]
          - effect: Allow
            actions: ["s3:*"]
            resources: ["arn:aws:s3:::geoip/*"]
      - name: frontend-uploader
        statements:
          - effect: Allow
            actions: ["s3:PutObject", "s3:GetObject", "s3:DeleteObject"]
            resources:
              - "arn:aws:s3:::frontend/git:*/*"
              - "arn:aws:s3:::frontend/latest/*"
      - name: file-access-user
        statements:
          - effect: "Allow"
            actions: ["s3:GetBucketLocation"]
            resources: ["arn:aws:s3:::files"]
          - effect: "Allow"
            actions:
              - "s3:ListBucket"
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
            resources: ["arn:aws:s3:::files/*"]
      - name: outline
        statements:
          - effect: Allow
            actions:
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
              - "s3:ListBucketMultipartUploads"
            resources: ["arn:aws:s3:::outline-wiki-data"]
          - effect: Allow
            actions:
              - "s3:DeleteObject"
              - "s3:PutObject"
              - "s3:GetObject"
            resources: ["arn:aws:s3:::outline-wiki-data/*"]
      - name: mastodon
        statements:
          - effect: Allow
            actions:
              - "s3:ListBucket"
              - "s3:GetBucketLocation"
              - "s3:ListBucketMultipartUploads"
            resources: ["arn:aws:s3:::mastodon"]
          - effect: "Allow"
            actions:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:DeleteObject"
              - "s3:ListMultipartUploadParts"
              - "s3:AbortMultipartUpload"
            resources: ["arn:aws:s3:::mastodon/*"]
      - name: outline-bucket-access
        statements:
          - effect: Allow
            principal": { AWS: ["*"] }
            actions: ["s3:GetBucketLocation", "s3:ListBucket"]
            resources: ["arn:aws:s3:::outline-wiki-data"]
          - effect: Allow
            principal:
              AWS: ["*"]
            actions: ["s3:GetObject", "s3:PutObject"]
            resources: ["arn:aws:s3:::outline-wiki-data/*"]
      - name: static-files
        statements:
          - effect: Allow
            principal:
              AWS: ["*"]
            actions: ["s3:GetBucketLocation", "s3:ListBucket"]
            resources: ["arn:aws:s3:::frontend"]
          - effect: Allow
            principal:
              AWS: ["*"]
            actions: ["s3:GetObject"]
            resources:
              - "arn:aws:s3:::frontend/*"
              - "arn:aws:s3:::frontend/latest/*"
              - "arn:aws:s3:::frontend/dev/*"
              - "arn:aws:s3:::frontend/git:*/*"
          - effect: Allow
            principal:
              AWS: ["*"]
            actions: ["s3:ListBucket"]
            resources: ["arn:aws:s3:::frontend"]
            conditions:
              - StringEquals: '"s3:prefix": ["latest", "dev", "git:*"]'
      - name: wordpress
        statements:
          - effect: Allow
            principal:
              AWS: ["*"]
            actions: ["s3:GetBucketLocation", "s3:ListBucket"]
            resources: ["arn:aws:s3:::wordpress"]
          - effect: Allow
            principal:
              AWS: ["*"]
            actions:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
              - "s3:ListMultipartUploadParts"
              - "s3:AbortMultipartUpload"
            resources:
              - "arn:aws:s3:::wordpress/*"
      - name: bsky
        statements:
          - effect: Allow
            principal:
              AWS: ["*"]
            actions: ["s3:GetBucketLocation", "s3:ListBucket"]
            resources: ["arn:aws:s3:::bsky-pds"]
          - effect: Allow
            principal:
              AWS: ["*"]
            actions:
              - "s3:*"
            resources:
              - "arn:aws:s3:::bsky-pds/*"

    users:
      - accessKey: loki
        existingSecretKey: secret-key
        existingSecret: minio-user-loki
        policy: loki
      - accessKey: registry
        existingSecretKey: secret-key
        existingSecret: minio-user-registry
        policy: registry
      - accessKey: backups
        existingSecretKey: secret-key
        existingSecret: minio-user-backups
        policy: backups
      - accessKey: files
        existingSecretKey: secret-key
        existingSecret: minio-user-files
        policy: file-access-user
      - accessKey: outline
        existingSecretKey: secret-key
        existingSecret: minio-user-outline
        policy: outline
      - accessKey: geoipupdate
        existingSecretKey: secret-key
        existingSecret: minio-user-geoipupdate
        policy: geoip-readwrite
      - accessKey: github-actions
        existingSecretKey: secret-key
        existingSecret: minio-user-github-actions
        policy: 'geoip-readonly frontend-uploader'
      # - accessKey: mastodon
      #   existingSecretKey: secret-key
      #   existingSecret: minio-user-mastodon
      - accessKey: wordpress
        existingSecretKey: secret-key
        existingSecret: minio-user-wordpress
        policy: wordpress
      - accessKey: bsky
        existingSecretKey: secret-key
        secistingSecret: minio-user-bsky
        policy: bsky

    buckets:
      - name: geoip
      - name: mastodon
      - name: loki-logs
      - name: docker-registry
      - name: db-backups
      - name: source
      - name: files
      - name: outline-wiki-data
        policy: private
      - name: frontend
        policy: private
      - name: data
      - name: wordpress
        policy: private
      - name: bsky-pds
        policy: private

    customCommands:
      # set bucket policy to 'outline-bucket-access'
      - command: anonymous set-json /mnt/extras/outline-bucket-access.json myminio/outline-wiki-data
      # set bucket policy to 'static-files'
      - command: anonymous set-json /mnt/extras/static-files.json myminio/frontend
    customCommandJob:
      extraVolumeMounts:
        - name: extra-policies
          mountPath: /mnt/extras
          readOnly: true
      extraVolumes:
        - name: extra-policies
          configMap:
            name: minio-policies
            optional: false

    tls:
      enabled: false
    oidc:
      enabled: false
    metrics:
      serviceMonitor:
        enabled: false
        public: true

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "kubernetes.io/arch"
              operator: In
              values: ["amd64"]
    tolerations:
    - key: "arch"
      operator: "Equal"
      value: "arm64"
      effect: "NoSchedule"
    resources:
      requests:
        memory: 1Gi

    postJob:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/arch"
                operator: In
                values: ["amd64"]
      tolerations:
      - key: "arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoSchedule"
