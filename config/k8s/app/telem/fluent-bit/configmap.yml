apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit
  # namespace: fluentbit-system
  namespace: kube-system
data:
  fluent-bit.conf: |
    [SERVICE]
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port   2020
        #Log_Level debug
        #Storage metrics at /api/v1/storage
        #Storage.metrics on
        Parsers_File /fluent-bit/etc/custom_parsers.conf
        Parsers_File /fluent-bit/etc/parsers.conf

    @INCLUDE node-exporter.conf

    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        #multiline.parser docker, cri
        Parser          docker
        DB              /var/log/flb_kube.db
        Tag             kube.*
        Mem_Buf_Limit   5MB
        Skip_Long_Lines On
    [INPUT]
        Name systemd
        Tag host.*
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        Systemd_Filter _SYSTEMD_UNIT=docker.service
        Read_From_Tail On

    [FILTER]
        Name        kubernetes
        Match       kube.*
        Labels      On
        Annotations On
        K8S-Logging.Parser  Off
        K8S-Logging.Exclude Off
        Use_Kubelet         Off
        Merge_Log           On
        #Merge_Log_Key       log
        Keep_Log            Off
        Kube_URL            https://kubernetes.default.svc.cluster.local:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token

    @INCLUDE nginx-filters.conf

    [FILTER]
        Name         parser
        Match        kube.var.log.containers.fluent-bit*
        Parser       fluent-bit
        Key_Name     log
        Reserve_Data true

    [OUTPUT]
        Name        loki
        Match       kube.*
        labels      job=k8s
        host        loki.default.svc.cluster.local
        port        3100
        http_user   admin
        http_passwd admin
        tls         off
        tls.verify  off
        auto_kubernetes_labels on
        label_keys             $kubernetes['host'],$kubernetes['container_image']
    [OUTPUT]
        Name        loki
        Match       host.*
        labels      job=systemd
        host        loki.default.svc.cluster.local
        port        3100
        http_user   admin
        http_passwd admin
        tls         off
        tls.verify  off
    #[OUTPUT]
    #    Name stdout
    #    Match kube.var.log.containers.*

  custom_parsers.conf: |
    [PARSER]
        Name         json
        Format       json
    [PARSER]
        Name         docker
        Format       json
        #Time_Key     time
        #Time_Format  %Y-%m-%dT%H:%M:%S.%L
        #Time_Keep    On
        # Command      |  Decoder | Field | Optional Action
        # =============|==================|=================
        #Decode_Field_As    json     log
    [PARSER]
        Name   docker_host_events
        Format json
        Decode_Field_As escaped message
    [PARSER]
        Name        nginx-access
        Format      regex
        Regex       ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")
        Time_Key    time
        Time_Format %d/%b/%Y:%H:%M:%S %z
    [PARSER]
        Name        nginx-error
        Format      regex
        Regex       ^(?<time>\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}) \[(?<level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$
        Time_Key    time
        Time_Format %Y/%m/%d %H:%M:%S
    # CRI Parser
    [PARSER]
        # http://rubular.com/r/tjUt3Awgg4
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
    [PARSER]
        Name        fluent-bit
        Format      regex
        Regex       ^\[(?<time>.*?)\][ ]+\[[ ]*(?<level>debug|info|warn|error)\][ ]+\[?(?<source>.*?)?\]?[ ]*(?<message>.*?)[\n]*$
        Time_Key    time
        Time_Format %Y/%m/%d %H:%M:%S

  node-exporter.conf: |
    [INPUT]
        Name            node_exporter_metrics
        Tag             metrics.node_host
        Scrape_Interval 10s
        path.procfs     /mnt/proc/
        path.sysfs      /mnt/sys/
    [OUTPUT]
        Name      prometheus_exporter
        Match     metrics.*
        Host      0.0.0.0
        Port      2021
        add_label hostname ${HOSTNAME}

  nginx-filters.conf: |
    [FILTER]
        Name         parser
        Parser       nginx-error
        Match        kube.var.log.containers.nginx*
        Key_Name     log
        Reserve_Data true
    [FILTER]
        Name     geoip2
        Match    kube.var.log.containers.nginx*
        Database /opt/GeoLite2-ASN.mmdb
        Lookup_Key remote_addr
        Record     as_org remote_addr %{autonomous_system_organization}
        Record     asn    remote_addr %{autonomous_system_number}
    [FILTER]
        Name     geoip2
        Match    kube.var.log.containers.nginx*
        Database /opt/GeoLite2-City.mmdb
        Lookup_Key            remote_addr
        Record city           remote_addr %{city.names.en}
        Record country_code   remote_addr %{country.iso_code}
        Record continent_code remote_addr %{continent.code}
        Record latitude       remote_addr %{location.latitude}
        Record longitude      remote_addr %{location.longitude}
        Record loc_radius     remote_addr %{location.accuracy_radius}

  streams.conf: ''
