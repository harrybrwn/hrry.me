services:
  registry:
    image: registry:2
    command: /etc/docker/registry/config.yml
    environment:
      - REGISTRY_LOG_LEVEL=debug
      - REGISTRY_AUTH=htpasswd
      - REGISTRY_AUTH_HTPASSWD_PATH=/run/secrets/registry-htpasswd-file
      - REGISTRY_AUTH_HTPASSWD_REALM=registry.hrry.dev
    env_file:
      - config/env/redis.env
      - config/env/registry.env
      - config/env/minio.env
    secrets:
      - registry-htpasswd-file
    configs:
      - source: registry.yml
        target: /etc/docker/registry/config.yml
    networks:
      backend:
        aliases:
          - registry.default.svc.cluster.local
    healthcheck:
      test: ["CMD", "wget", "-qO-", "localhost:5000/"]
      timeout: 10s
      interval: 1m

  filestash:
    image: machines/filestash:d1a2c7a
    ports:
      - "8334"
    networks:
      backend:
        aliases:
          - filestash.default.svc.cluster.local
    volumes:
      - filestash:/app/data/state
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "localhost:8334/healthz"]
    #   interval: 1m30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s

  vault:
    image: vault:1.13.1
    ports:
    - "8200:8200"
    environment:
      VAULT_ADDR: "0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "root"
    cap_add:
      - IPC_LOCK

  vault-client:
    image: vault:1.13.1
    entrypoint: sh -c 'if [ -n "$0" ]; then $0 "$@"; else sh; fi'
    environment:
      VAULT_ADDR: "http://vault:8200"
