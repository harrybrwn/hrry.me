- hosts: all
  become: true
  become_method: sudo

  vars_files:
    # ansible become password in vault encrypted vars file
    - ../vars/keys.yml

  pre_tasks: []

  handlers:
    - name: restart docker
      systemd:
        state: restarted
        name: docker.service

  tasks:
    - name: docker installation dependencies
      apt:
        package:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
      when: ansible_facts['os_family'] == "Debian" and ansible_facts['pkg_mgr'] == "apt"
    - name: add docker apt source
      shell: |
        set -eu -o pipefail
        if [ -f /etc/apt/keyrings/docker.gpg -a -f /etc/apt/sources.list.d/docker.list ]; then
          echo "done"
        else
          if [ -d /etc/apt/keyrings ]; then
            rm -f /etc/apt/keyrings/docker.gpg
          else
            mkdir -p /etc/apt/keyrings
          fi
          curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
            $(lsb_release -cs) stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          echo "changed"
        fi
      when: ansible_facts['os_family'] == "Debian" and ansible_facts['pkg_mgr'] == "apt"
      register: docker_apt_source
      changed_when: docker_apt_source.stdout == "changed"
    - name: install docker
      apt:
        update_cache: true
        package:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
      when: ansible_facts['os_family'] == "Debian" and ansible_facts['pkg_mgr'] == "apt"
    - name: custom libseccomp2 version
      apt:
        deb: http://http.us.debian.org/debian/pool/main/libs/libseccomp/libseccomp2_2.5.4-1+b1_armhf.deb
      when: |
        ansible_facts.architecture == "armv7l" and
        ansible_facts.os_family == "Debian" and
        ansible_facts.pkg_mgr == "apt"
    # Install the nfs server package for all hosts because docker will not run
    # an nfs server if the nfs kernel module is not loaded onto the host.
    - name: install nfs server
      apt:
        pkg: nfs-kernel-server
    - name: create nfs mount
      when: nfs_server
      file:
        path: /mnt/nfs/hrry.dev
        mode: '0755'
        state: directory

    - name: create docker certs dirs
      file:
        path: '/etc/docker/{{ item.path }}'
        owner: root
        group: root
        mode: '0755'
        state: directory
        recurse: true
      loop:
        - {path: certs.d}
        - {path: 'certs.d/{{ container_registry }}'}
        - {path: registry}
    - name: install root ca
      template:
        src: ../docker-root-ca.pem
        dest: '/etc/docker/certs.d/{{ container_registry }}/ca.crt'
        owner: root
        group: root
        mode: '0644'
        validate: openssl x509 -noout -text -in %s
        backup: true

    - name: tmux config file
      template:
        src: templates/.tmux.conf
        dest: ~/.tmux.conf
        backup: false
        mode: '0664'
      become: false
