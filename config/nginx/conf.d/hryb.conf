server {
	server_name hryb.dev;

	listen 80;
	listen [::]:80;
	server_tokens off;
	allow all;

	if ($http_upgrade_insecure_requests = "1") {
		return 301 https://$host$request_uri;
	}

	error_page 404 /404.html;
	root /var/www/harrybrwn.com;
	location ~ ^/(robots.txt|favicon.ico|sitemap.xml|manifest.json)$ {
		try_files $uri /404.html;
	}
	location = / {
		try_files /index.html /404.html;
	}
	location / {
		return 404;
	}
}

server {
	server_name hryb.dev hryb.local;
	listen      443 ssl http2;
	listen [::]:443 ssl http2;
	server_tokens off;
	include 'snippets/hryb-ssl';

    include "snippets/private-network-allow.conf";
    include "snippets/cloudflare-allow.conf";
    deny all;

	location / {
		autoindex on;
		root /var/www/harrybrwn.com;
	}
}

# S3
server {
	server_name s3.hryb.dev s3.hryb.local;
	listen      443 ssl http2;
	listen [::]:443 ssl http2;
	server_tokens off;
	include 'snippets/hryb-ssl';
    include "snippets/private-network-allow.conf";
    include "snippets/cloudflare-allow.conf";
    deny all;

	ignore_invalid_headers off;
	proxy_buffering off;
	client_max_body_size 0;

	set $s3 s3:9000;

	location / {
		proxy_http_version 1.1;
		chunked_transfer_encoding off;
		proxy_set_header Connection "";

		proxy_set_header  Host              $http_host;
		proxy_set_header  X-Real-IP         $remote_addr;
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_pass http://$s3;
	}

	# We don't want minio's metrics to be exposed to the public
	location /minio/v2/metrics {
		return 404;
	}
}

# S3 Frontend
server {
	server_name console.s3.hryb.dev
				s3-console.hryb.dev
				console.s3.hryb.local
				s3-console.hryb.local;
	listen      443 ssl http2;
	listen [::]:443 ssl http2;
	server_tokens off;
	include 'snippets/hryb-ssl';

	set $s3 s3:9001;

	location / {
		proxy_buffers  32 64k;
		proxy_buffer_size 64k;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_pass http://$s3;
	}
}