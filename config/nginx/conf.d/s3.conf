# S3
server {
	server_name s3.hrry.dev
	   			s3.hrry.local;
	listen      443 ssl http2;
	listen [::]:443 ssl http2;
	server_tokens off;
	include 'snippets/hrry.dev-ssl';

	ignore_invalid_headers off;
	proxy_buffering off;
	client_max_body_size 0;

	set $s3 s3.default.svc.cluster.local:9000;

	location / {
		proxy_http_version 1.1;
		chunked_transfer_encoding off;
		proxy_set_header Connection "";

		proxy_set_header  Host              $http_host;
		proxy_set_header  X-Real-IP         $remote_addr;
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_pass http://$s3;
	}

	# We don't want minio's metrics to be exposed to the public
	location /minio/v2/metrics {
		return 404;
	}
}

# S3 Frontend
server {
	server_name s3-console.hrry.dev
	   			console.s3.hrry.dev
				s3-console.hrry.local;
	listen      443 ssl http2;
	listen [::]:443 ssl http2;
	server_tokens off;
	include 'snippets/hrry.dev-ssl';

	set $s3 s3.default.svc.cluster.local:9001;

	location / {
		proxy_buffers  32 64k;
		proxy_buffer_size 64k;
		proxy_set_header  X-Real-IP         $remote_addr;
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_set_header  Host              $http_host;
		proxy_pass        http://$s3;
		add_header        Cache-Control "no-cache";
	}

	location /static {
		proxy_buffers  32 64k;
		proxy_buffer_size 64k;
		proxy_set_header  X-Real-IP         $remote_addr;
		proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header  X-Forwarded-Proto $scheme;
		proxy_set_header  Host              $http_host;
		proxy_pass        http://$s3;
		# cache in browser for 1 day
		add_header        Cache-Control "public, max-age=86400, must-revalidate";
	}
}