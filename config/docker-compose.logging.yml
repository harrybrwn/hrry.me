version: "3.8"

configs:
  fluent-bit.conf:
    file: ./config/logging/fluent-bit/fluent-bit.conf
  fluent-bit-parsers:
    file: ./config/logging/fluent-bit/parsers.conf
  prometheus.yml:
    file: ./config/logging/prometheus.yml
  loki.yml:
    file: ./config/logging/loki.yml
  grafana.ini:
    file: ./config/grafana/grafana.ini

services:

  fluentbit:
    image: ${REGISTRY}/harrybrwn/fluent-bit:${VERSION:-latest}
    build:
      context: .
      dockerfile: config/docker/Dockerfile.fluentbit
      args:
        - FLUENTBIT_VERSION=1.9.3
        - FLUENTBIT_VERSION=1.9.3-debug
    ports:
      - '24224:24224/tcp'
      - '24224:24224/udp'
    networks:
      backend:
        aliases:
          - fluentbit.default.svc.cluster.local
    deploy:
      # We want exactly one per host
      mode: global
    volumes:
      # Collecting info about docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers/:/var/lib/docker/containers/
      - /sys/fs/cgroup:/sys/fs/cgroup
      # Collecing system info
      - /proc:/mnt/host/proc:ro
      - /sys:/mnt/host/sys:ro
    environment:
      - ENV=dev
    configs:
      - source: fluent-bit.conf
        target: /fluent-bit/etc/fluent-bit.conf
      - source: fluent-bit-parsers
        target: /fluent-bit/etc/parsers.conf

  # TODO configure read/write replicas for scalability <https://gist.github.com/wardbekker/6abde118f530a725e60acb5adb04508a>
  loki:
    image: ${REGISTRY}/harrybrwn/loki:${VERSION:-latest}
    build:
      context: .
      dockerfile: config/docker/Dockerfile.loki
      args:
        - LOKI_VERSION=2.5.0
    command:
      - "-config.file=/loki/loki.yaml"
      - "-config.expand-env=true"
      - "-log.format=${LOG_FORMAT:-json}"
      - "-log.level=${LOG_LEVEL:-warn}"
    ports:
      - "3100"
      - "9096" # grpc
    env_file:
      - config/env/db.env
      - config/env/loki.env
    volumes:
      - loki:/var/loki
    networks:
      backend:
        aliases:
          - loki.default.svc.cluster.local
    logging:
      driver: fluentd
      options:
        tag: 'docker.logs.loki.{{.ID}}'
        fluentd-async: "true"

  grafana:
    image: ${REGISTRY}/harrybrwn/grafana:${VERSION:-latest}
    build:
      context: .
      # dockerfile: config/docker/Dockerfile.grafana
      dockerfile: config/grafana/Dockerfile
      args:
        # - GRAFANA_VERSION=latest
        - GRAFANA_VERSION=9.1.4
    entrypoint: ["sh", "-c"]
    command:
      - |
        wait.sh db:5432 -- echo
        exec /run.sh
    ports:
      - "3000:3000"
    environment:
      - GF_SERVER_PROTOCOL=http # use h2 or https in the future
      - GF_SERVER_ENFORCE_DOMAIN=false
    env_file:
      - config/env/grafana.env
    volumes:
      - grafana:/var/lib/grafana
    networks:
      backend:
        aliases:
        - grafana.default.svc.cluster.local

  prometheus:
    image: prom/prometheus:v2.35.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--log.level=${LOG_LEVEL:-debug}"
      - "--log.format=${LOG_FORMAT:-json}"
    networks:
      backend:
        aliases:
          - prometheus.prometheus.svc.cluster.local
          - prometheus.default.svc.cluster.local
    ports:
      - 9090:9090
    volumes:
      - prometheus:/prometheus
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    logging:
      driver: fluentd
      options:
        tag: 'docker.logs.prometheus.{{.ID}}'
        fluentd-async: "true"

  nginx-metrics-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    entrypoint: ["/usr/bin/nginx-prometheus-exporter"]
    command:
      - "-nginx.scrape-uri=http://prometheus:1d414708232df0e2cad6a277135b210b8bd8e41ccc31a9a6d0e935fa595b62b3@nginx/stub_status"
    networks:
      backend:
        aliases:
          - nginx-metrics-exporter.default.svc.cluster.local

  # TODO https://github.com/oliver006/redis_exporter
  # redis-exporter:

  nginx:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.nginx.{{ .ID }}', fluentd-async: "true" }
  db:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.postgres.{{ .ID }}', fluentd-async: "true" }
  redis:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.redis.{{ .ID }}', fluentd-async: "true" }
  api:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.api.{{ .ID }}', fluentd-async: "true" }
  hooks:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.hooks.{{ .ID }}', fluentd-async: "true" }
  backups:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.backups.{{ .ID }}', fluentd-async: "true" }
  geoip:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.geoip.{{ .ID }}', fluentd-async: "true" }
  vanity-imports:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.vanity-imports.{{ .ID }}', fluentd-async: "true" }
  legacy-site:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.legacy-site.{{ .ID }}', fluentd-async: "true" }
  registry:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.registry.{{ .ID }}', fluentd-async: "true" }
  filestash:
    logging:
      driver: fluentd
      options: { tag: 'docker.logs.filestash.{{ .ID }}', fluentd-async: "true" }

volumes:
  grafana:
  prometheus:
  loki:
